from fnmatch import *
def d(n):
    a=[]
    for i in range(2,round(n**0.5)+1):
        if n%i==0:
            a.append(i)
            a.append(n//i)
    return sorted(a)
def p(n):
    for i in range(2,round(n**0.5)+1):
        if n%i==0:
            return False
    if n>1:
        return True

n=2352000+1
k=0
while True:
    b=[x for x in d(n) if p(x)]
    s=''.join(map(str,b))
    if fnmatch(s, '10*29')==1:
        print(n,max(b))
        k+=1
        if k>=5:
            break
    n+=1


'''
219)	(В. Селезнев) Назовём маской числа последовательность цифр, в которой также могут встречаться следующие символы:
- символ «?» означает ровно одну произвольную цифру;
- символ «*» означает любую последовательность цифр произвольной длины; в том числе «*» может задавать и пустую последовательность.
Среди натуральных чисел, больших 2352000, найдите числа, все различные простые делители которых, выписанные без пробелов по возрастанию,
 образуют число, соответствующее маске «10*29». 
 Например, число 234566 имеет 3 простых делителя: 2, 17, 6899, они образуют число 2176899, которое соответствует маске «21*9». 
 В ответе укажите первые 5 найденных чисел в порядке возрастания, справа от каждого числа запишите его наибольший простой делитель.

'''