def pr(n):
    for i in range(2,round(n**0.5)+1):
        if n%i==0:
            return False
    if n>1:
        return True

k=0
mini=1000000000000
a=[int(x) for x in open('17-386.txt')]
for i in range(len(a)-2):
    a1=a[i]
    a2=a[i+1]
    a3=a[i+2]
    if str(a1).count('3')>0 and str(a2).count('3')>0 and str(a3).count('3')>0:
        if pr(a1+a2+a3)==True:
            k+=1
            mini=min(mini,a1+a2+a3)

print(k,mini)

'''
386)	(Н. Сафронов) В файле 17-386.txt содержится последовательность целых неотрицательных чисел, не превышающих 10000. 
Определите количество троек элементов последовательности, 
в которых каждое число содержит цифру 3 в десятичной записи, 
а сумма элементов такой тройки является простым числом. 
В ответе запишите два числа: сначала количество найденных троек, 
затем минимальную сумму элементов таких троек. 
В данной задаче под тройкой подразумевается три идущих подряд элемента последовательности.
'''